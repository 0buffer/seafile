#+-*-mode:org -*-
#+startup: showall

#+title: Explorer/Nautilus 扩展的编译、注册和使用


* ${topsrcdir}/desktop 代码结构
  
  |--------------+---------------------------------------------|
  | folder       | contents                                    |
  |--------------+---------------------------------------------|
  | common       | common parts used in both Explorer/Nautilus |
  | common/icons | icons for menu items                        |
  | explorer     | win32 explorer specific part                |
  | nautilus     | nautilus specific part                      |


* Explorer

** 一些说明 

  1) shell extension需要调用seafile.exe来获取信息

  2) 但我们不能把seafile.exe所在的目录加入到系统的path中去。因为打包后，
     seafile.exe和glib等在同一目录，如果加入path有可能会影响用户的其他
     软件

  3) 因此采用的方法是在注册shell extension的dll时，把seafile.exe
     的路径写到注册表中，运行时从注册表中读取这一路径。
     
** 目前实现的功能
  
*** 右键菜单：

   + 如果检测到daemon没有运行，则在菜单中提供启动daemon的选项
   
   + 检测当前路径是否是在repo中，如果不是则提供"从此处创建repo"的选项,用户点击
     后自动打开web端的"创建文件盒"页面
   
   + 在web中打开该repo
   
   + 在auto-commit/manual-mode 之间切换的菜单项
     
*** repo目录的特殊icon
   
   如果某个文件夹是某个repo的顶层目录，那么就在文件夹的图标上面额外显示
   一个特殊的图标。


** 不打包编译、使用(开发时使用)
  
  1) 修改 ${topsrcdir}/desktop/explorer/seaf-dll.h 中的宏定义
  
     #+begin_src c
       #define SEAF_MINGW_PATH                                   \
           "c:\\MinGW\\msys\\1.0\\bin;"                          \
           "c:\\MinGW\\msys\\1.0\\lib;"                          \
           "c:\\MinGW\\msys\\1.0\\local\\bin;"                   \
           "c:\\MinGW\\msys\\1.0\\local\\lib;"                   \
           "c:\\MinGW\\lib;c:\\MinGW\\bin;"                      \
           "c:\\Python26;"                                       \
           "c:\\Python26\\Scripts;" ;
     #+end_src c

     把上面的路径改成你相应的路径
  
  2) cd ${topsrcdir}/desktop/explorer
  3) make debug
  4) make install-sys
     
  因为打包之后所有的 exe/lib 都在同一目录下，因此建议先打包之后再注册、测试。
  
** 打包

  1) cd ${topsrcdir}/desktop/explorer
  2) make
     
  3) 用setupwin.sh打包，比如打包到默认的 /d/workspace/ccnet-green/
  
  4) cd /d/workspace/ccnet-green/
  5) ./register-system-wide.bat
     

** 其他

  1) 关于shell extension 的实现及相关链接，见 ${topsrcdir}/desktop/explorer/README.org
     
  2) 由于shell extension 的dll由explorer.exe调用，如果要使用glib，就需
     要把glib所在的目录加入到系统的PATH变量中去，而这可能会影响用户其他
     的程序，因此没有使用glib。

  3) 如果重新编译了seaf_shell_ext.dll, 必须从进程管理器杀掉explorer/iexplorer进程
     才能覆盖老的dll，否则cp/rm 等操作会报告 "permission denied"
     

* Nautilus
  
  Nautilus下目前只实现了 MenuProvider 扩展。
  
** 配置
   
   Debian/Ubuntu下 需要先安装 nautilus-extension-dev 软件包。
   #+begin_src sh
   sudo aptitude install nautilus-extension-dev
   #+end_src
  
** 编译安装
   
   1) 先从Makefile.in 生成 Makefile
      #+begin_src sh
      cd ${topsrcdir}
      ./config.status
      #+end_src

   2) 编译安装
      #+begin_src sh
      cd ${topsrcdir}/desktop/nautilus/ && make && make install
      #+end_src
      
** 注册

   `make install' 把扩展的.so文件安装到 /usr/lib/nautilus/extensions-2.0/ 目录
   下之后，Nautils 启动时会自行调用扩展，无需另外注册。
      

** 使用

   需要重启nautilus以使扩展生效。

   #+begin_src sh
   pkill nautilus
   #+end_src
